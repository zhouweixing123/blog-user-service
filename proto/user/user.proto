syntax = "proto3";
package blog.service.user;
// 相当于路由
service UserService {
  //Register 创建用户
  rpc Register(User) returns (Response){}

  //GetAllUser 获取所有的用户信息
  rpc GetAllUser(Request) returns (Response){}

  //GetByAccount 通过账号获取用户信息
  rpc GetByAccount(User) returns (Response){}

  //GetByEmail 通过用户邮箱获取用户信息
  rpc GetByEmail(User) returns (Response){}

  //GetByPhone 通过手机号获取用户信息
  rpc GetByPhone(User) returns (Response){}

  //Auth 认证接口
  rpc Auth(User) returns (Token){}

  //ValidateToken 密码校验
  rpc ValidateToken(Token) returns (Token){}

  //UpdateUser 修改用户信息
  rpc UpdateUser(User) returns (Response){}

  //CreatePwdResetToken 创建重置密码Token
  rpc CreatePwdResetToken(PwdReset) returns (PwdResetResponse){}

  //ValidatePwdResetToken 校验token是否在有效期内
  rpc ValidatePwdResetToken(Token) returns (Token){}

  // DelPwdResetToken 删除已经校验的重置密码token
  rpc DelPwdResetToken(PwdReset) returns (PwdResetResponse){}
}

message User {
  string id = 1;
  string account = 2;
  int64  ip = 3;
  string email = 4;
  string profile_photo = 5;
  string registration_time = 6;
  string birthday = 7;
  string phone = 8;
  string nickname = 9;
  string created_at = 10;
  string updated_at = 11;
  string pwd = 12;
}

message Request {}

message Response {
  User user = 1;
  repeated User users = 2;
  repeated Error errors = 3;
}

message Error {
  int32 code = 1;
  string description = 2;
}

message Token {
  string token = 1;
  bool valid = 2;
  repeated Error errors = 3;
}

message PwdReset {
  string email = 1;
  string token = 2;
}

message PwdResetResponse {
  PwdReset pwdReset = 1;
  repeated Error errors = 2;
}